%   S A P F O   -   Sense APprehending Frame Operator   -   (c) Emil P·leö%                                                                 1988  %                   (part 7 :  L,R-VALENCY, ANALYSIS):- segment(segval).:- public leftval/5,rightval/5,prior/4,int/6,int4/3,cat3/4,retroot/2,sema/2:far.:- extrn an/6,radix/4,attach/3,pair/2,casecat/2,disfar/2,prep2/6:far.% zlatovlasÈ dievËalval(km(adj,vzt,_,_,_),ko(sub,Se,K1,sub,[korp|_],K2),km(sub,[osoba|_],_,_,K3),_,L) :-   sema(Se,[kon]),ctr_inc(1,X),ctr_inc(1,Y),   L=[(par,0),[X,K2,(rel,0),Y],[Y,K1,(xrel,0),X]].% ËervenovlasÈ dievËalval(km(adj,vzt,_,_,_),ko(adj,kval,K1,sub,Se2,K2),km(sub,Se3,_,_,K3),_,L) :-   ctr_inc(1,X),ctr_inc(1,Y),L=[(par,0),[X,K2,(atr,0),Y],[Y,K1,(xatr,0),X]].% ohnivoËerven˝lval(km(adj,vzt,_,_,_),ko(sub,Se,K1,adj,kval,K2),_,_,L) :-   ctr_inc(1,X),ctr_inc(1,Y),L=[(atr,0),[X,K2,(rel,0),Y],[Y,K1,(xrel,0),X]].% krvavoËerven˝lval(km(adj,vzt,_,_,_),ko(adj,akvzt,K1,adj,kval,K2),_,_,L) :-   radix(K1,K3,adj,cat(_,_,_,Sf,_,_)),Sf=av,   ctr_inc(1,X),ctr_inc(1,Y),L=[(atr,0),[X,K2,(rel,0),Y],[Y,K3,(xrel,0),X]].% staroperzsk˝lval(km(adj,vzt,_,_,_),ko(adj,_,K1,adj,vzt,K2),km(sub,_,_,_,K3),_,L) :-   radix(K2,K4,_,_),   leftval(K2,poz,ano,K3,L1),L1=[SP1|Q1],   leftval(K1,poz,ano,K4,L2),attach(Q1,L2,Q),L=[SP1|Q].% Ëiernobiely, drahocenn˝lval(km(adj,kval,'','',_),ko(adj,kval,K1,adj,_,K2),km(sub,_,_,_,_),_,L) :-   L=[(atr,0),[X,K1]],ctr_inc(1,X).% sv‰tosv‰t˝lval(km(adj,Se,_,_,_),ko(adj,Se,K,adj,Se,K),_,_,L) :-   ctr_inc(1,X),L=[(atr,0),[X,K,mes,'veæa']].% s˝tomodr˝% öablozub˝% kovoobr·bacÌlval(km(adj,vzt,'','',_),ko(sub,Se,K1,adj,klas,K2),_,_,L) :-   radix(K2,K3,adj,cat(_,_,_,Sf,_,_)),Sf=c,   radix(K3,_,sl,cat(I,_,_,_,_,_,_)),prior(I,Se,obj,SP),pair(SP,XSP),   ctr_inc(1,X),ctr_inc(1,Y),L=[(mot,0),[X,K3,SP,Y],[Y,K1,XSP,X]].% ûivotodarn˝lval(km(adj,vzt,Pf,Sf,_),ko(sub,Se1,K1,sl,I,K2),km(sub,Se2,_,_,_),_,L) :-   Sf=n,   prior(I,_,sub,SP1),pair(SP1,XSP1),   prior(I,Se1,obj,SP2),pair(SP2,XSP2),   ctr_inc(1,X),ctr_inc(1,Y),L=[XSP1,[X,K2,SP2,Y],[Y,K1,XSP2,X]].% zlopovestn˝% nÌzkokmenn˝% ûivotaschopn˝% !!! Starhrad call lval star˝ hrad  , call disfar ostro-strelec% otcova cestalval(km(adj,indprivl,_,_,_),ko(sub,[osoba|_],K1),km(sub,_,_,_,_),ko(sl,I,_),L) :-   prior(I,[osoba],_,SP),pair(SP,XSP),ctr_inc(1,X),L=[XSP,[X,K1]].% otcovo ryb·rËenielval(km(adj,indprivl,_,_,_),ko(sub,[osoba|_],K1),km(sl,I,_,_,_),_,L) :-   prior(I,[osoba],_,SP),pair(SP,XSP),ctr_inc(1,X),L=[XSP,[X,K1]].% otcova tvrdosùlval(km(adj,indprivl,_,_,_),ko(sub,[osoba|_],K1),km(sub,[atb|_],_,Sf,_),ko(adj,_,_),L) :-   (Sf=ota;Sf=oba;Sf=stvo;Sf='osù'),ctr_inc(1,X),L=[(xatr,0),[X,K1]].% Rembrandtov nos,kufor,obrazlval(km(adj,indprivl,_,_,_),ko(sub,[osoba|_],K1),km(sub,Se,_,_,_),_,L) :-   ((Se=[korp|_],Sp=xpar);    (Se\=[korp|_],sema(Se,[kon]),Sp=pos);    (sema(Se,[abs]),Sp=koh)),ctr_inc(1,X),L=[(Sp,0),[X,K1]].% liöacÌ hon, maËacia chÙdzalval(km(adj,drprivl,_,_,_),ko(sub,Se,K1),km(sub,_,_,_,_),ko(sl,I,_),L) :-   (SP=(rel,0);(prior(I,Se,_,SP),pair(SP,XSP))),ctr_inc(1,X),L=[SP,[X,K1]].% slonia velkosùlval(km(adj,drprivl,_,_,_),ko(sub,_,K1),km(sub,_,_,_,_),ko(adj,_,_),L) :-   ctr_inc(1,X),L=[(rel,0),[X,K1]].% ovËia vlna, labutÌ krk, maËkina labalval(km(adj,drprivl,_,_,_),ko(sub,_,K1),km(sub,Se,_,_,_),_,L) :-   ((Se=[mat|_],SP=suk);    (Se=[korp|_],(SP=xpar;SP=rel));    (sema(Se,[ziv]),SP=koh);    (Se\==[korp|_],sema(Se,[kon]),(SP=mot;SP=suk))),   ctr_inc(1,X),L=[(SP,0),[X,K1]].% r˝chly behlval(km(adj,kval,_,_,K1),nil,km(sub,[dej|_],_,_,_),_,L) :-   radix(K3,K1,adv,_),ctr_inc(1,X),L=[(mds,0),[X,K3]].% r˝chle behanielval(km(adj,kval,_,_,K1),nil,km(sl,_,_,_,K2),_,L) :-   radix(K3,K1,adv,_),ctr_inc(1,X),L=[(mds,0),[X,K3]].% Ëerven˝ domlval(km(adj,kval,_,_,K1),nil,km(sub,Se,_,_,_),_,L) :-   Se\==[dej|_],disfar(K1,Q),L=[(atr,0)|Q].% Ëervenkast˝ dom, veliËizn˝ dom, priveæk˝ dom, pramal˝ domlval(km(adj,kval,Pr,Sf,_),ko(adj,kval,K),km(sub,_,_,_,_),_,L) :-   (((Sf='·nsk';Sf=izn;Sf=ulink;Sf=link;Sf='uök';Sf='uËk';Sf='uËiËk';Sf='ËiËk';      Sf='';Sf='iËk';Sf='uæk';Sf=unk;Pr=pre;Pr=pra),M='veæa');    ((Sf=ist;Sf=ast;Pr=po),M='m·lo');    (Pr=pri,M='prÌliö')),   ctr_inc(1,X),L=[(atr,0),[X,K,mes,M]].% vËerajöia prech·dzka, doln· zemlval(km(adj,vzt,_,_,_),ko(adv,SP,K),km(sub,Se,_,_,_),ko(Sd,_,_),L) :-   (Sd=sl;Se=[lok|_]),ctr_inc(1,X),L=[SP,[X,K]].% rieka Nitralval(km(sub,Se,_,_,K1),_,km(sub,Se,_,_,K2),_,L) :-   ctr_inc(1,X),L=[(ifr,0),[X,K1]].% sobotÚajöia plavbalval(km(adj,vzt,Pr,Sf,_),ko(sub,[cas|_],K2),km(sub,_,_,_,_),ko(sl,_,_),L) :-   (Sf=n;Sf='jö';Sf=ov),ctr_inc(1,X),L=[(tmp,_),[X,K2]].% lesn˝ behlval(km(adj,vzt,Pf,Sf,_),ko(sub,[lok|_],K2),km(sub,_,_,_,_),ko(sl,_,_),L) :-   (Sf=n;Sf=sk;Sf=ick;Sf=ov),ctr_inc(1,X),L=[(lok,_),[X,K2]].% kruhov˝ pohyb, zvoncovit˝ poh·rlval(km(adj,vzt,Pr,Sf,_),ko(sub,Se1,K2),km(sub,Se2,_,_,_),KO,L) :-   (Sf=ovit;Sf=ov;Sf=n;Sf=eck;Sf=ick),sema(Se1,[kon]),   (KO=ko(sl,_,_);sema(Se2,[kon])),   ifthen(Sf=n,Se1\=[lok|_]),   ctr_inc(1,X),L=[(rel,0),[X,K2]].% prÌmorsk· ûivica, zadunajskÈ pl·ne,predpotopn˝ strojlval(km(adj,vzt,Pr,Sf,_),ko(sub,S,K2),km(sub,Se,_,_,_),KO,L) :-   (Sf=n;Sf=sk;Sf=ov;Sf=ick;Sf='jö'),   ((S=[lok|_],ifthenelse(sema(Se,[mov]),Sp=ori,Sp=lok));(S=[cas|_],Sp=tmp)),   (KO=nil;KO=ko(sub,_,_)),   ifthenelse(Pr='',true,int4(Pr,S,No)),   disfar(K2,Q),L=[(Sp,No)|Q].% öijacÌ strojlval(km(adj,vzt,_,Sf,_),ko(sl,_,K2),km(sub,_,_,_,K3),_,L) :-   (Sf=c;Sf=ac;Sf=ic;Sf=ec),   ctr_inc(1,X),L=[(mot,0),[X,K2]].% kamenist˝ krajlval(km(adj,vzt,_,Sf,_),ko(sub,_,K2),km(sub,Se,_,_,K3),_,L) :-   (Sf=n;Sf=iv;Sf=av;Sf=ast;Sf=ist;Sf=at;Sf=nat;Sf=it),sema(Se,[kon]),   ctr_inc(1,X),L=[(par,0),[X,K2,mes,'veæa']].% meden· karafalval(km(adj,vzt,_,Sf,_),ko(sub,[mat|_],K2),km(sub,Se,_,_,_),_,L) :-   (Sf='';Sf=en;Sf=n;Sf=ov),sema(Se,[kon]),sema(Se,[neziv]),   ctr_inc(1,X),L=[(mat,0),[X,K2]].% oh˝bateæn˝ drÙtlval(km(adj,vzt,_,Sf,_),ko(sl,I,K2),km(sub,Se,_,_,K3),_,L) :-   (Sf=n;Sf='teæn';Sf=biln),   prior(I,Se,obj,SP),pair(SP,XSP),   ctr_inc(1,X),L=[XSP,[X,K2,mdl,posib]].% haöteriv· ûenalval(km(adj,vzt,_,Sf,_),ko(sl,I,K2),km(sub,Se,_,_,K3),_,L) :-   (Sf=n;Sf=v;Sf='aËn';Sf=liv;Sf=iv;Sf=av),   prior(I,Se,sub,SP),pair(SP,XSP),ctr_inc(1,X),   L=[XSP,[X,K2,mdl,sklon]].% lval(km(adj,vzt,_,n,_),ko(sub,_,_),km(sub,_,_,_,_),ko(sl,_,_),[koh]).% lval(km(adj,vzt,_,_,_),ko(sub,_,_),km(sub,[ins|_],_,_),_,[mot]).% lval(km(adj,vzt,_,ck/sk,_),ko(sub,_,_),_,_,[rel]).leftval(KM1,St,Ne,KM2,L) :-   radix(KM1,KO1,Sd1,Cat1),cat3(Sd1,Cat1,Val1,Se1,Pr1,Sf1),   radix(KM2,KO2,Sd2,Cat2),cat3(Sd2,Cat2,_,Se2,Pr2,Sf2),   sema(Se2,Val1),   retroot(KO1,KOR1),retroot(KO2,KOR2),   ifthenelse((Se1=akvzt;Se1=klas),Se11=vzt,Se11=Se1),   lval(km(Sd1,Se11,Pr1,Sf1,KM1),KOR1,km(Sd2,Se2,Pr2,Sf2,KM2),KOR2,L).% prÌchod p·peûa/rozpad ur·nu/bolesù hæadaniarval(km(sub,[dej|_],_),ko(sl,I,K2),0,gen,km(sub,Se,K3),_,SP) :-   prior(I,Se,_,SP).% vykorisùovanie (robotnÌka) kapitalistomrval(km(sub,[dej|_],_),ko(sl,I,K2),0,ins,km(sub,Se,_),_,SP) :-   prior(I,Se,sub,SP),prior(I,Se,obj,SP1),casecat(obj,SP1).% l·ska k vlastirval(km(sub,[dej|_],_),ko(sl,100,K2),k,dat,km(sub,Se,_),_,SP) :-   prior(100,Se,obj,SP).% dar sestre/cesta do Indierval(km(sub,_,_),ko(sl,I,_),Pr,Pa,km(sub,Se,_),_,SP) :-   Pa\==nom,Pa\==ak,Pr\==s,int(I,Pr,Pa,Se,SP,_).% cesta spravodlivostirval(km(sub,_,_),ko(sl,_,_),0,gen,km(sub,_,_),ko(adj,_,_),mds).% tvrdosù otcarval(km(sub,[atb|_],_),ko(adj,_,_),0,gen,km(sub,_,_),_,xatr).% l˙ky povyöerval(km(sub,_,_),_,0,_,km(adv,SP,_),_,SP).% strecha domu, ministerstvo obchodu, poh·r vodyrval(km(sub,Se1,_),_,0,gen,km(sub,Se2,_),_,SP) :-   (sema(Se1,[kon]),sema(Se2,[kon]),SP=xpar);   (Se1=[org|_],SP=oku);   (Se1=[jedn|_],Se2=mat,SP=xmes).% opasok (staröieho) bratarval(km(sub,Se,_),ko(sub,_,_),0,gen,km(sub,[osoba|_],_),_,pos) :-   sema(Se,[kon]).% dievËa (bledej) tv·rerval(km(sub,[osoba|_],_),_,0,gen,km(sub,[korp|_],_),_,par).% dievËa s (havranÌmi) vlasmirval(km(sub,[osoba|_],_),_,s,ins,km(sub,[korp|_],_),_,par).% vojak s rozhodnosùourval(km(sub,_,_),_,s,ins,km(sub,[atb|_],_),ko(adj,_,K4),atr).% hrnËek s uchomrval(km(sub,Se1,_),_,s,ins,km(sub,Se2,_),_,par) :-   sema(Se1,[kon]),sema(Se2,[kon]).% öt·t v rozkladerval(km(sub,Se,_),_,Pr,Pa,km(sub,[dej|_],_),ko(sl,I,K),XSP) :-   nominaiz(Pr,Pa,K),prior(I,Se,sub,SP),pair(SP,XSP).% prsteÚ zo zlata, koberec z Perzierval(km(sub,Se1,_),_,z,gen,km(sub,Se2,_),_,SP) :-   (sema(Se1,[kon]),Se2=[mat|_],SP=mat);   (Se2=[lok|_],SP=ori).% dar z l·skyrval(km(sub,_,_),ko(sl,_,_),z,gen,km(sl,_,_),_,kaz).% reûim za Hitlera, prsteÚ za korunurval(km(sub,Se1,_),_,za,gen,km(sub,Se2,_),_,SP) :-   ((sema(Se,[ziv]);Se=[temp|_]),SP=tmp);(Se2=[penjedn|_],SP=cen).% kameÚ nad/pod/za stolomrval(km(sub,Se,_),_,Pr,ins,km(sub,[lok|_],_),_,(lok,No)) :-   (Pr=za;Pr=nad;Pr=pod;Pr=pred;Pr=medzi),sema(Se,[kon]),int4(Pr,lok,No).% kameÚ v/na/pri stolerval(km(sub,Se,_),_,Pr,lok,km(sub,[lok|_],_),_,(lok,No)) :-   (Pr=v;Pr=na;Pr=pri),sema(Se,[kon]),int4(Pr,lok,No).% d·ma u dvorarval(km(sub,Se,_),_,u,gen,km(sub,[lok|_],_),_,(lok,1)) :-   sema(Se,[kon]).% rozpr·vka o snehulienkerval(km(sub,_,_),_,o,lok,km(sub,_,_),_,tem).% knihy po otcovi, stopy po daûdirval(km(sub,_,_),_,po,lok,km(sub,Se,_),_,SP) :-   ifthenelse(sema(Se,[ziv]),SP=suk,SP=kaz).% kniha od otca, fæak od farbyrval(km(sub,_,_),_,od,gen,km(sub,Se,_),_,SP) :-   ifthenelse(sema(Se,[ziv]),SP=suk,SP=kaz).% Ëerpadlo na vodu, schody na povalurval(km(sub,Se1,_),_,na,ak,km(sub,Se2,_),_,SP) :-   ((Se1=[ins|_];Se1=[stroj|_]),SP=mot);   (sema(Se1,[kon]),Se2=[lok|_],SP=des).% pl·öù do daûÔa,schody do pivnicerval(km(sub,Se1,_),_,do,gen,km(sub,Se2,_),_,SP) :-   ifthenelse(Se2=[lok|_],(Se\==[ins|_],SP=des),SP=mot).% referent pre obchod, auto pre odvozrval(km(sub,Se,_),_,pre,ak,km(sub,_,_,_),_,SP) :-   (sema(Se,[ziv]),SP=oku);   (sema(Se,[instr]),SP=mot).% hostinec bez prir·ûkyrval(km(sub,_,_),_,bez,gen,km(sub,_,_),_,soc).% spray proti hmyzurval(km(sub,ins,_),_,proti,dat,km(sub,_,_),_,mot).% domËek povyöe/poniûe vodop·durval(km(sub,_,_),_,Pr2,Pa,km(sub,_,_),_,SP) :-   code_world(W,main),prep2(Pa,SP,Pr2,_,_),code_world(_,W).% öpagety po sicÌlsky/vajce na m‰kkorval(km(sub,_,_),_,Pr,_,km(adv,_,_),_,mds) :-    Pr=po;Pr=na.% rightval ûe+...    inf+...% vÙæa k moci% call lval öpagety po sicÌlsky% !!! interfere otv·raË na konzervy = otv·raË konzerv% !!! shift root poh·r vody, bolesù hæadania, cesta spravodlivostirightval(KM1,Pr,Pa,KM2,(Sp,0)) :-   radix(KM1,KO1,Sd1,Cat1),cat1(Sd1,Cat1,Se1),   radix(KM2,KO2,Sd2,Cat2),cat1(Sd2,Cat2,Se2),   retroot(KO1,KOR1),retroot(KO2,KOR2),   rval(km(Sd1,Se1,KM1),KOR1,Pr,Pa,km(Sd2,Sf2,KM2),KOR2,Sp).retroot(nil,nil) :- !.retroot((KO1,KO2),KOR) :- KO1=(_,_),KO2=(_,_),!,   retroot(KO1,ko(Sd1,Se1,KO1)),retroot(KO2,ko(Sd2,Se2,KO2)),   KOR=ko(Sd1,Se1,KO1,Sd2,Se2,KO2).retroot(KO,ko(Sd,Se,KO)) :- radix(KO,_,Sd,Cat),cat1(Sd,Cat,Se1),   ifthenelse((Se1=akvzt;Se1=klas),Se=vzt,Se=Se1).     cat1(adj,Cat,Se) :- !,arg(2,Cat,Se).cat1(_,Cat,Se) :- arg(1,Cat,Se).cat3(adj,Cat,Val,Se,Pr,Sf) :- !,arg(1,Cat,Val),arg(2,Cat,Se),  arg(3,Cat,Pr),arg(4,Cat,Sf).cat3(_,Cat,uni,Se,Pr,Sf) :- !,arg(1,Cat,Se),arg(2,Cat,Pr),arg(3,Cat,Sf).intersect([X|L1],L2) :- (member(X,L2);intersect(L1,L2)),!.prior(I,Se,spe,SP) :- retrieveh(intencia,I,int1(_,_,Se1,SP,_)),     intersect(Se,Se1),!.prior(I,Se,spe,SP) :- retrieveh(intencia,I,int1(_,_,Se1,SP,_)),     Se=[X|_],Se1=[Y|_],sem(X,Y),!.prior(I,Se,spe,SP) :- retrieveh(intencia,I,int1(_,_,Se1,SP,_)),     Se1\=[],sema(Se,Se1),!.prior(I,Se,ord,SP) :- !,retrieveh(intencia,I,int1(_,_,Se1,SP,_)),    sema(Se,Se1),!.prior(I,Se,Cat,SP) :- nonvar(Cat),Cat\==nesub,!,    retrieveh(intencia,I,int1(_,_,Se1,SP,_)),    sema(Se,Se1),casecat(Cat,SP),!.	   prior(I,Se,_,SP) :- I\==100,    retrieveh(intencia,I,int1(_,_,Se1,SP,_)),casecat(obj,SP),sema(Se,Se1),!.prior(I,Se,Cat,SP) :- Cat\==nesub,    retrieveh(intencia,I,int1(_,_,Se1,SP,_)),casecat(sub,SP),sema(Se,Se1),!.prior(I,Se,Cat,SP) :- retrieveh(intencia,I,int1(_,_,Se1,SP,_)),sema(Se,Se1),    ifthen(Cat==nesub,casecat(fak,SP)),!.prior(400,osoba,_,(sta,0)).int(CR,Pr,Pa,Se,SP,Fl) :-     nonvar(SP),     (retrieveh(intencia,CR,int1(Pr,Pa,Se,SP,Fl));      int2(Pr,Pa,Se,SP);      int3(CR,Pr,Pa,Se,SP);      (code_world(C,main),prep2(Pa,SP,Pr,_,_),code_world(_,C))     ).int(CR,Pr,Pa,Se,SP,Fl) :-     var(SP),nonvar(CR),    ((retrieveh(intencia,CR,int1(Pr,Pa,Se1,SP,Fl)),sema(Se,Se1));     (Fl=0,((int2(Pr,Pa,Se1,SP),sema(Se,Se1));            (int3(CR,Pr,Pa,Se1,SP),sema(Se,Se1));            (an(prepoz(Pa,_),sem(SP1,No),_,Pr,_,_),nonvar(SP1),SP=SP1)    	   )     )    ).int2(v,lok,lok,(lok,1)).int2(za,ins,lok,(lok,5)).int2(na,lok,lok,(lok,8)).int2(nad,ins,lok,(lok,2)).int2(pod,ins,lok,(lok,3)).int2(pred,ins,lok,(lok,4)).int2(medzi,ins,lok,(lok,11)).int2(pri,lok,lok,(lok,7)).int2(od,gen,lok,(exl,7)).int2(bez,gen,_,(soc,2)).int2(s,ins,_,(soc,1)).int2(u,gen,lok,(lok,7)).int2(za,gen,ziv,(tmp,4)).int2(za,gen,temp,(tmp,4)).int2(o,ak,casjedn,(tmp,6)).int2(po,lok,temp,(tmp,7)).int2(za,ak,casjedn,(tmp,6)).int2(Pr,lok,temp,(tmp,4)) :- Pr=na;Pr=v.int2(pred,ins,Sem,(tmp,1)) :- Sem=temp;Sem=casjedn.int2(cez,ak,temp,(tmp,4)).int2(do,gen,temp,(fin,3)).int2(od,gen,temp,(inc,4)).int2(v,ak,temp,(tmp,4)).int2(0,gen,casjedn,(tmp,4)).int2(0,ak,casjedn,(dur,4)).int2(na,ak,casjedn,(psp,4)).int2(okolo,gen,temp,(tmp,4)).int2(pri,lok,temp,(tmp,4)).int2(ku,dat,casjedn,(tmp,4)).int2(po,ak,casjedn,(fre,4)).int2(Pr,dat,lok,(lok,12)) :- Pr=naproti;Pr=oproti.int3(CR,Pr,Pa,lok,(SP,N)) :- (Pa=ak;Pa=ins),((Pr=ponad,N=2);(Pr=popod,N=3);    (Pr=popred,N=4);(Pr=poza,N=5);(Pr=pomedzi,N=11)),    ifthenelse(CR<7,SP=via,ifthenelse(Pa=ak,SP=des,SP=lok)).int3(CR,Pr,lok,lok,(SP,7)) :- (Pr=pri;Pr=popri),ifthenelse(CR<7,SP=via,SP=lok).int3(CR,Pr,gen,lok,(SP,N)) :-   (((Pr='blÌzko';Pr='niûe';Pr='vyöe';Pr='poniûe';Pr='povyöe';Pr='vedæa';     Pr='povedæa';Pr='pozdÂû';Pr='neÔaleko';Pr='obÔaleË'),N=7);   ((Pr=okolo;Pr=kol;Pr=kolo),N=6);((Pr='konËa';Pr=kraj),N=14);   ((Pr=stred;Pr=vprostred),N=1);((Pr=mimo;Pr=pomimo),N=13)),   ifthenelse(CR<7,SP=via,SP=lok).int4(v,lok,1).int4(na,lok,8).int4('n·',lok,8).int4(nad,lok,2).int4(pod,lok,3).int4(pred,lok,4).int4(za,lok,5).int4('z·',lok,5).int4(pri,lok,7).int4('prÌ',lok,7).int4(po,lok,8).int4(medzi,lok,11).int4(pred,cas,1).int4(po,cas,7).sema(L1,L2) :- (var(L1);var(L2)),!.sema(_,[]) :- !.sema(L1,[S|L2]) :- sema1(L1,S),sema(L1,L2),!.sema1([],_) :- !,fail.sema1([X|L],S) :- (sema2(X,S);sema1(L,S)),!.sema2(X,X) :- !.sema2(X,nemov) :- sem(X,mov),!,fail.sema2(X,nemov) :-!.sema2(X,neziv) :- sema2(X,ziv),!,fail.sema2(X,neziv) :- !.sema2(X,neciel) :- sema2(X,ciel),!,fail.sema2(X,neciel) :- !.sema2(X,inslok) :- (sema2(X,instr);sema2(X,lok)),!.sema2(X,zivabs) :- (sema2(X,ziv);sema2(Z,abs)),!.sema2(X,Y):-sem(X,Z),sema2(Z,Y),!.sem(atf,_) :- !,fail.sem(osoba,ziv).sem(zviera,ziv).sem(ziv,ciel).sem(org,ciel).sem(ins,instr).sem(kyb,instr).sem(stroj,instr).sem(vec,instr).sem(mat,instr).sem(flor,instr).sem(atb,abs).sem(dej,abs).sem(jav,abs).sem(rezult,abs).sem(cas,abs).sem(gnoz,abs).sem(mod,abs).sem(jedn,abs).sem(verb,abs).sem(volmod,mod).sem(rzhmod,mod).sem(sklmod,mod).sem(povmod,mod).sem(mozmod,mod).sem(schmod,mod).sem(zvkmod,mod).sem(sklmod,mod).sem(casjedn,jedn).sem(penjedn,jedn).sem(dlzjedn,jedn).sem(objjedn,jedn).sem(plojedn,jedn).sem(vahjedn,jedn).sem(X,kon) :- sem(X,mov);X=lok.sem(osoba,mov).sem(zviera,mov).sem(org,mov).sem(kyb,mov).sem(vec,mov).sem(sil,mov).sem(stroj,mov).sem(ins,mov).sem(mat,mov).sem(korp,mov).sem(flor,mov).sem(sil,prir).