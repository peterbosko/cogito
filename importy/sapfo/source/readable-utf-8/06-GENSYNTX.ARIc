%   S A P F O   -   Sense APprehending Frame Operator   -   (C) Emil P·leö %                                                                  1990%                 (part 6:  SYNTAX, SURFACE GENERATION):- segment(segsur).:- extrn colfar/4,leftsurf/7,rightsurf/7:far.:- public p/1,pick/4:far.p :- p(n).p(Kb) :- recorded(isabel,isabel(NET),_),paraphrase(Kb,NET).paraphrase(K,LL) :-   eraseall(nfchart),eraseall(cfchart),eraseall(gnchart),   member(L,LL),surface(K,L,LL),fail.paraphrase(_,_) :- !.surface(K,L,LL) :-  L=[N|_],   (sursen(hl,_,_,_,_,N,nil,LL,Q);    surnof(gr(_,_,nom,sg),_,far(non,_,_),N,nil,LL,Q)), print(Q),ifthen(K==l,lprint(Q)),ifthen(K==f,fprint(Q)).sursen(KIN,Foc,Ak,gr(Ro,Zi,Ci),FAR,N,SP,LL,Q40) :- colfar(nil,N,[N,Ko1|L],LL,Ret), ((Ak=akt,Q0=([],Ret));  (config(per(_,a,_,_),_,_,_,_,_,_,_),   Ak=pas,dappend(([],Ret),([],['Pas']),Q0))), ifthen(KIN==hl,config(_,_,_,_,_,_,fok(Foc),_)), ifthenelse(SP\==nil,(pair(SP,SP1),empty((SP1,_),L,L1)),L1=L), ((((config(per(a,_,_,_),_,_,_,_,_,_,_),     (konverz(Ko,Ko1);konverz(Ko1,Ko)),dappend(Q0,([],['Kon']),Q1));    (config(_,_,_,lex(a,_,_,_,_,_,_,_),_,_,_,_),     (synon(Ko,Ko1);synon(Ko1,Ko)),dappend(Q0,([],['Syn']),Q1));    (Ko=Ko1,Q1=Q0)   ),   L2=L1);  (config(_,_,_,lex(_,_,_,_,a,_,_,_),_,_,_,_),   magnon(Ko,Ko1),dappend(Q0,([],['Mag']),Q1),(L1=L2;pick(L1,mds,'veæmi',L2))) ), radix(Ko,_,sl,cat(In,_,_,Rx,Vd,_,_)),CAT=sem(In,Rx,Vd), (pick(L2,neg,Ne,L3);  (Ne=ano,L3=L2) ), ifthenelse(pick(L3,asp,_,L4),true,L4=L3), ifthenelse(pick(L4,cas,CAS,L6),true,(CAS='prÈzens',L6=L4)), ifthenelse((CAS=='kondicion·l';CAS=='kondicion·l minul˝'),KND=1,KND=0), ifthenelse((CAS=='predminul˝';CAS=='kondicion·l minul˝'),PAST=1,PAST=0), ifthenelse((CAS=='minul˝';CAS=='predminul˝'),MIN=1,MIN=0), (pick(L6,SP5,N5,_);(KIN==bezhl,L6=[],FAR=far(N5))), ifthenelse(Ak==pas,casecat(obj,SP5),                      (casecat(sub,SP5);(casecat(obj,SP5),reflex(In)))), member([N5,Ko5|L5],LL), case([Ko5==ja -> (Os=1,Cs=sg),       Ko5==ty -> (Os=2,Cs=sg),       Ko5==my -> (Os=1,Cs=pl),       Ko5==vy -> (Os=2,Cs=pl)      |(Os=3,ifthenelse(pick(L5,kar,_,_),Cs=pl,Cs=sg))]), ifthenelse(Os==3,L7=L6,pick(L6,SP5,N5,L7)), ifthenelse((Os\==3;In==180;In==181;In==182;In==190),BEZAG=1,BEZAG=0), ifthenelse(KIN\==bezhl,(    ((BEZAG==1,L8=L7,Q2=Q1);    (ifthenelse((Foc==ags;Ak==pas),Cat1=obj,Cat1=sub),     surpar(gr(Ro,Zi,Os,Cs),far(Cat1,TRANZ,KOMPL),In,Ak,AG,L7,L8,Q1,Q2,LL),BEG=1)   )							       ), (BEG=1,BEZAG=0,L8=L7,Q2=Q1,Os=3) ), ifthenelse((CAS=='fut˙rum',Vd==nedok,BEG\==1),            (gen(aux(Os,Cs,fut,Ro),_,Ne,byt,Qa,_),             dappend(Q2,Qa,Q4),BEG=1,NEG=1),            Q4=Q2), ifthenelse((PAST==1,BEZAG==1),            (gen(aux(Os,Cs,min,Ro),_,Ne,Qc,_),             dappend(Q4,Qc,Q6),BEG=1,NEG=1,PASTBEG=1),            Q6=Q4), ifthenelse(BEG==1,            (ifthenelse(KND==1,dappend(Q6,([by],[]),Q8),Q8=Q6),             ifthenelse((MIN==1,Os\==3,Ak==akt),                        (gen(aux(Os,Cs,prez,_),_,ano,Qb,_),dappend(Q8,Qb,Q10)),                        Q10=Q8),             ifthenelse(Rx==nezv,Q11=Q10,dappend(Q10,([Rx],[]),Q11)),             ifthenelse((CAS=='fut˙rum',Vd==nedok),                        (gen(aux(Os,Cs,fut,Ro),_,Ne,byt,Qa,_),                         dappend(Q11,Qa,Q12),BEG=1,NEG=1),                        Q12=Q11),          ifthenelse((PAST==1,PASTBEG=0),                        (gen(aux(Os,Cs,min,Ro),_,Ne,byt,Qc,_),                         dappend(Q12,Qc,Q14),NEG=1),                        Q14=Q12)            ),            Q14=Q6	   ), ((pick(L8,SP8,N8,L10),suradv(_,sem(Se8,_,_),N8,SP8,LL,Qd),dappend(Q14,Qd,Q16));  (L10=L8,Q16=Q14) ), ((Se8\==mds,pick(L10,SP10,N10,L12),   suradv(_,_,N10,SP10,LL,Qe),dappend(Q16,Qe,Q18));  (L12=L10,Q18=Q16) ), senbreak(Foc,Ak,L12,Q18,CAT,Ko,Rx,In,Vd,Ne,far(TRANZ,KOMPL),flags(KIN,CAS,KND,PAST,MIN,BEZAG,BEG,PASTBEG,NEG),Ro,Zi,Os,Cs,AG,LL,Q40).senbreak(Foc,Ak,L12,Q18,CAT,Ko,Rx,In,Vd,Ne,far(TRANZ,KOMPL),flags(KIN,CAS,KND,PAST,MIN,BEZAG,BEG,PASTBEG,NEG),Ro,Zi,Os,Cs,AG,LL,Q40) :- ((pick(L12,mod,N12,L14),MOD=1,member([N12,Ko12|_],LL));  (MOD=0,Ko12=Ko,L14=L12) ), ifthenelse(NEG==1,Ne2=ano,Ne2=Ne), ifthen((Ak=akt;MOD=1),   case([MIN==1 -> gen(lpar(Ro,Cs),CAT,Ne2,Ko12,Qf,_),         CAS=='prÈzens' -> (Vd\=dok,gen(indikat(Os,Cs,prez),CAT,Ne2,Ko12,Qf,_)),	 CAS=='fut˙rum' -> (Vd=dok,gen(indikat(Os,Cs,fut),CAT,Ne2,Ko12,Qf,_);                            Vd=nedok,gen(infin,CAT,Ne2,Ko12,Qf,_)),         CAS=='imperatÌv' -> gen(imper(Os,Cs),CAT,Ne2,Ko12,Qf,_)        ])), ifthen((Ak==pas,MOD==0),   case([PAST==1 -> gen(aux(Os,Cs,min,Ro),_,Ne2,byvat,Qf,_),         MIN==1 -> gen(aux(Os,Cs,min,Ro),_,Ne2,byt,Qf,_),         CAS=='prÈzens' -> gen(aux(Os,Cs,prez,_),_,Ne2,byt,Qf,_),         CAS=='fut˙rum' -> true,         CAS=='imperatÌv' -> gen(aux(Os,Cs,imp,_),_,Ne2,byt,Qf,_)        ])), dappend(Q18,Qf,Q20), ifthenelse(BEG=0,   (ifthenelse(KND==1,dappend(Q20,([by],[]),Q22),Q22=Q20),    ifthenelse((MIN=1,Os\==3,Ak==akt),      (gen(aux(Os,Cs,prez,_),_,ano,byt,Qg,_),dappend(Q22,Qg,Q24)),      Q24=Q22),    ifthenelse(Rx==nezv,Q26=Q24,dappend(Q24,([Rx],[]),Q26))   ),   Q26=Q20), ifthenelse(MOD==1,   (ifthenelse(Ak==pas,Qh=['byù'],gen(infin,CAT,Ne2,Ko,Qh,_)),    dappend(Q26,Qh,Q28)),   Q28=Q26), ifthenelse(Ak==pas,   (gen(tpar(Ro,Zi,nom,Cs,poz),CAT,Ne2,Ko,Qj,_),    dappend(Q28,Qj,Q29)),   Q29=Q28), (surpar(_,far(dat,_,_),In,_,AG,L14,L16,Q29,Q30,LL);  (L16=L14,Q30=Q29) ), ifthenelse(Foc==ags,   (L18=L16,Q32=Q30),   (ifthenelse(Ak==akt,Cat2=obj,Cat2=sub),    (surpar(_,far(Cat2,TRANZ,KOMPL),In,Ak,AG,L16,L18,Q30,Q32,LL);(L18=L16,Q32=Q30)))           ), ((surpar(_,_,In,_,AG,L18,L20,Q32,Q34,LL),PAR1=1);  (L20=L18,Q34=Q32) ), ((PAR1==1,surpar(_,far(fak,_,_),In,_,AG,L20,L22,Q34,Q36,LL));  (L22=L20,Q36=Q34) ), ((pick(L22,SP22,N22,L24),int(In,inf,_,_,SP22,_),   surinf(N22,SP22,LL,Qi),dappend(Q36,Qi,Q38));  (L24=L22,Q38=Q36) ), L24=[], ((nonvar(TRANZ),dappend(Q38,TRANZ,Q40));  (nonvar(KOMPL),dappend(Q38,KOMPL,Q40));  Q40=Q38 ), ifthen((KIN=hl,BEZAG=0,Os=3,Ci=sg),AG==1).surnof2(gr(Ro,Zi,Pa,Ci),sem(Se,Rx,In),far(Ctg,Tranz,Kompl),N,SP,LL,Q24) :- colfar(nil,N,[N,Ko1|L],LL,Ret),Q0=([],Ret), ifthenelse(SP\==nil,(pair(SP,SP1),empty((SP1,_),L,L0)),L0=L), ifthenelse(pick(L0,neg,nie,L1),Ne=nie,(Ne=ano,L1=L0)), ifthenelse(pick(L1,kar,_,L2),Ci=pl,(Ci=sg,L2=L1)), ifthenelse(pick(L2,cas,_,L201),true,L201=L2), ifthenelse(pick(L201,asp,Vd,L202),true,L202=L201), ifthenelse(pick(L202,dir,Dr,L203),true,L203=L202), ifthenelse(pick(L203,mes,'veæa',L3),true,L3=L203), ((config(_,_,_,lex(_,_,_,_,_,_,_,a),_,_,_,_),   symbol(Ko1,Ko),dappend(Q0,([],['Sbl']),Q1));  (config(_,_,_,lex(a,_,_,_,_,_,_,_),_,_,_,_),   (synon(Ko,Ko1);synon(Ko1,Ko)),dappend(Q0,([],['Syn']),Q1));  (config(_,_,_,lex(_,_,_,a,_,_,_,_),_,_,_,_),   (abstr(Ko1,Ko);abstr(Ko,Ko1)),dappend(Q0,([],['Abs']),Q1));  (Ko=Ko1,Q1=Q0) ), (gen(subst(Ro,Zi,Pa,Ci),sem(Se,Po),Ne,Ko,H,_);  (gen(gerund(Pa,Ci),sem(In,Rx,Vd),Ne,Ko,H,_),Se=[abstr|_],Ro=str,Zi=nez) ), ifthenelse((Ne==ano;sema(Se,[abstr])),Q2=Q1,dappend(Q1,([nie],[]),Q2)), ((pick(L3,ord,K2,L4),gen(ord(Ro,Zi,Pa,Ci),_,_,K2,([X2|_],_),_),dappend(Q2,([X2],[]),Q4));  (L4=L3,Q4=Q2) ), ((pick(L4,kar,K4,L6),gen(card(Ro,Zi,Pa,Ci),_,_,K4,([X4|_],_),_),dappend(Q4,([X4],[]),Q6));  (pick(L4,mul,K4,L6),gen(mult(Ro,Zi,Pa,Ci),_,_,K4,([X4|_],_),_),dappend(Q4,([X4],[]),Q6));  (pick(L4,spe,K4,L6),gen(spec(Ro,Zi,Pa,Ci),_,_,K4,([X4|_],_),_),dappend(Q4,([X4],[]),Q6));  (L6=L4,Q6=Q4) ), ((pick(L6,SP6,N6,L8),   leftsurf(N6,Ko,SP6,Acon6,Ko6,indprivl,LL),   surdet(_,gr(Ro,Zi,Pa,Ci,St6),CAT6,Ne6,Ko6,N6,SP6,Acon6,LL,Qc),   dappend(Q6,Qc,Q7),dappend(Q7,([],['Nol']),Q8));  (L8=L6,Q8=Q6) ), ((pick(L8,SP8,N8,L10),pair(SP8,SPX8),   ((casecat(obj,SPX8),Typ=pas);(casecat(sub,SPX8),Typ=akt)),   suraf(left,Typ,gr(Ro,Zi,Pa,Ci,St),N8,SP8,LL,Qd),   (dappend(Q8,Qd,Q10);    (Ctg=sub,config(_,_,syn(_,_,_,a,_,_,_),_,_,_,_,_),Q10=Q8,Kompl=Qd,KPL=1)   )  );  (L10=L8,Q10=Q8) ), ((pick(L10,SP10,N10,L12),   leftsurf(N10,Ko,SP10,Acon10,Ko10,Sea10,LL),   Sea10\==indprivl,Sea10\==drprivl,   surdet(Sd10,gr(Ro,Zi,Pa,Ci,St10),CAT10,Ne10,Ko10,N10,SP10,Acon10,LL,Qe),   (ifthenelse(Sd10==left,       (dappend(Q10,Qe,Q11),dappend(Q11,([],['Nol']),Q12)),Q12=Q10);    (Ctg=sub,var(KPL),config(_,_,syn(_,_,_,a,_,_,_),_,_,_,_,_),       dappend(Q10,([],['Kpl']),Q12),Kompl=Qe)   )  );  (L12=L10,Q12=Q10) ), ((pick(L12,SP12,N12,L14),   leftsurf(N12,Ko,SP12,Acon12,Ko12,Sea12,LL),   N10\=N12,Sea12\==indprivl,ifthen(Sea12==kval,Sea10==kval),   surdet(Sd12,gr(Ro,Zi,Pa,Ci,St12),CAT12,Ne12,Ko12,N12,SP12,Acon12,LL,Qf),   (ifthenelse(Sd12==left,       (dappend(Q12,Qf,Q13),dappend(Q13,([],['Nol']),Q14)),Q14=Q12);    (Ctg=sub,var(KPL),config(_,_,syn(_,_,_,a,_,_,_),_,_,_,_,_),       dappend(Q12,([],['Kpl']),Q14),Kompl=Qf)   )  );  (L14=L12,Q14=Q12) ), ((pick(L14,ifr,N14,L20),member([N14,Ko14|_],LL),   gen(subst(_,_,Pa,Ci),_,_,Ko14,Qg,_),   dappend(Q14,Qg,Q15),dappend(Q15,([],['Apo']),Q16));  (L20=L14,Q16=Q14) ), dappend(Q16,H,Q18), ifthenelse(Rx=nezv,Q19=Q18,dappend(Q18,([Rx],[]),Q19)), ifthen(Sd10==right,dappend(Q19,Qe,Q191)), ifthen(Sd12==right,dappend(Q19,Qf,Q191)), ifthenelse((Sd10==right;Sd12==right),dappend(Q191,([],['Nor']),Q20),Q20=Q18), nombreak(gr(Ro,Zi,Pa,Ci),sem(Se,Rx,In),far(Ctg,Tranz,Kompl),flags,N,Ko,Ko1,Q20,L20,LL,Q24).nombreak(gr(Ro,Zi,Pa,Ci),sem(Se,Rx,In),far(Ctg,Tranz,Kompl),flags,N,Ko,Ko1,Q20,L20,LL,Q24) :- ((((pick(L20,SP20,N20,L22),     rightsurf(Ko,0,Pa20,N20,SP20,Ko20,LL),     surnof(gr(_,_,Pa20,_),_,far(non,_,_),N20,SP20,LL,Qh),     dappend(Q20,Qh,Q21),dappend(Q21,([],['Nor']),Q22));    (pick(L20,SP20,N20,L22),member([N20,Ko20|_],LL),     suradv(St,sem(SP20,_,_),N20,SP20,LL,Qh),     dappend(Q20,([],['Nor']),Q21),dappend(Q21,Qh,Q22));    (L22=L20,Q22=Q20)   ),   ((pick(L22,SP22,N22,L24),     rightsurf(Ko,Pr,Pa22,N22,SP22,Ko22,LL),     ifthen(Pr==0,Pa22\==gen),ifthen(Pr=medzi,Ci22=pl),     surnof(gr(_,_,Pa22,Ci22),_,far(non,_,_),N22,SP22,LL,Qi),     Qi=([Qk|_],_),vokaliz(Pr,Qk,PR),dappend((PR,[]),Qi,Ql),     dappend(Q22,Ql,Q23),dappend(Q23,([],['Nor']),Q24));    (L24=L22,Q24=Q22)   )  );  (pick(L20,SP20,N20,L24),		    ((pair(SP20,SPX20),     ((casecat(obj,SPX20),Typ=pas);(casecat(sub,SPX20),Typ=akt)),     suraf(right,Typ,gr(Ro,Zi,Pa,Ci,St),N20,SP20,LL,Qi)    );    (rightsurf(Ko,0,inf,N20,SP20,Ko20,LL),     surinf(N20,SP20,LL,Qi)    );    sursubsen(N20,SP20,gr(Ro,Zi,Pa20,Ci),far(N),LL,Qi);    (SP20=(rel,_),surnof(gr(_,_,nom,_),_,far(non,_,_),N20,SP20,LL,Qh),     dappend(([ako],['Nor']),Qh,Qi));    (SP20=(isa,_),surrnof(gr(_,_,Pa,Ci),_,far(non,_,_),N20,SP20,LL,Qh),     dappend((['('|Qh],[]),([')'],[]),Qi))   ),   dappend(Q20,Qi,Q24)  ) ), ifthen(Ko1=(_,0),Q24\=([_],_)), ((Ctg=sub,pick(L24,SP24,N24,L26),surtranz(N24,SP24,LL,Tranz));  L26=L24 ), L26=[].surnof2(gr(Ro,Zi,Pa,Ci),sem(Se,Rx,In),far(Ctg,Tranz,Kompl),N,SP,LL,Q24) :- member([N,Ko|L2],LL), case([Ko==ja -> (Os=1,Cs=sg),       Ko==ty -> (Os=2,Cs=sg),       Ko==my -> (Os=1,Cs=pl),       Ko==vy -> (Os=2,Cs=pl)      |fail]), code_world(C,main), osozak(X,Os,Cs,Ro,Zi,Pa,Do), code_world(_,C), Q24=([X],[]).   surpar(gr(Ro,Zi,Os,Cs),far(Cat,Tranz,Kompl),In,Ak,AG,L1,L2,Q1,Q4,LL) :- pick(L1,SP1,N,L2),standard(SP1,SP), ((ifthen(Cat==sub,Pa=nom),   (casecat(Cat,SP);(Cat==sub,casecat(obj,SP),reflex(In))),   memb1([N,Km|_],LL),   (radix(Km,_,sl,cat(In2,_,_,Rx,Vd,_,_));radix(Km,_,_,cat(Se,_,_,_,_));    radix(Km,_,adj,cat(_,Se,_,_,_,_))),   int(In,Pr,Pa,Se1,SP,_),sema(Se,Se1),   ifthen(Pr='medzi',Ci=pl),   ifthen((Pr==s,casecat(sub,SP)),fail),   casepas(Ak,Pa,Pa1),ifthen(Pa1==nom,Ci=Cs),   surnof(gr(Ro,Zi,Pa1,Ci),sem(Se,Rx,In2),far(Cat,Tranz,Kompl),N,SP,LL,Q),   ifthenelse(Pr==0,Q2=Q1,(Q=([X|_],_),vokaliz(Pr,X,PR),dappend(Q1,(PR,[]),Q2))),   dappend(Q2,Q,Q3),   ifthenelse(Rx==nezv,Q4=Q3,dappend(Q3,([Rx],[]),Q4)),   ifthen((Pa1=nom,Pr=0),(AG\==1,AG=1))  ) ).suraf(Sid,Typ,gr(Ro,Zi,Pa,Ci,St),N,SP,LL,Q) :- config(_,_,syn(_,_,a,_,_,_,_),_,_,_,_,_), member([N,Ko|L],LL),pair(SP,SP1),empty((SP1,_),L,L0), (pick(L0,neg,Ne,L1);  (Ne=ano,L1=L0) ), ifthenelse(pick(L1,cas,_,L2),true,L2=L1), ifthenelse(pick(L2,asp,_,L3),true,L3=L2), St=poz, ((Typ==akt,gen(cpar(Ro,Zi,Pa,Ci,_),sem(In,Rx,Vd),Ne,Ko,([X],_),_));  (Typ==pas,gen(tpar(Ro,Zi,Pa,Ci,St),sem(In,Rx,Vd),Ne,Ko,([X],_),_)) ), ((pick(L3,SP2,N2,L4),memb1([N2,Km2|_],LL),   radix(Km2,_,sub,cat(Se2,_,_,_,_)),standard(SP2,SP3),   int(In,Pr,Pa3,Se3,SP3,_),sema(Se2,Se3),   ifthen((Pr==s,casecat(sub,SP2)),fail),   ifthen(Pr=='medzi',Ci2=pl),   casepas(Typ,Pa3,Pa2),   surnof(gr(_,_,Pa2,Ci2),sem(Se2,_,_),far(non,_,_),N2,SP2,LL,Qb),   ifthenelse(Pr==0,Qd=Qb,      (Qb=([X1|_],[]),vokaliz(Pr,X1,PR),dappend((PR,[]),Qb,Qd)))  );  (Sid==left,L4=L3,Qb=([],_)) ), L4=[], ifthenelse((Rx==nezv;Typ==pas),Qc=[],Qc=[Rx]), case([Sid==left -> dappend(Qd,([X|Qc],[]),Qe),       Sid==right -> dappend(([X|Qc],[]),Qd,Qe)]), dappend(Qe,([],['Par']),Q).surdet(Sid,gr(Ro,Zi,Pa,Ci,St),adj(Se,Od,See,Su),Ne,Ko,N,SP,Acon,LL,Q12) :- member([N,_|L],LL),pair(SP,SP1),empty((SP1,_),L,L1), ifthenelse(Acon=[M1,M2],pick(L1,M1,M2,L2),L2=L1), (pick(L2,neg,Ne,L4);  (Ne=ano,L4=L2) ), ((Ko1=Ko,Q0=([],[]));  (config(_,_,_,lex(_,_,_,_,a,_,_,_),_,_,_,_),   magnon(Ko,Ko1),Q0=([],['Mag']));  (config(_,_,_,lex(a,_,_,_,_,_,_,_),_,_,_,_),   (synon(Ko1,Ko);synon(Ko,Ko1)),Q0=([],['Syn']));  (config(_,_,_,lex(_,a,_,_,_,_,_,_),_,_,_,_),   (anton(Ko1,Ko);anton(Ko,Ko1)),Q0=([nie],[Ret]),   ((Ret='Ant',St1=poz);(Ret='Lit',St1=sup))) ), ((pick(L4,gra,St2,L6),Q2=Q0);  (pick(L4,mes,Mes,L6),   ifthenelse(Mes=najviac,St2=sup,St2=poz),   ifthenelse(Mes='veæa',Q2=(['veæmi'],[]),Q2=Q0));  (St2=poz,L6=L4,Q2=Q0) ), ifthenelse(nonvar(St1),St=St1,St=St2), ((pick(L6,mds,N6,L8),   suradv(St6,sem(Se6,Od6,See6),N6,mds,LL,Qc),dappend(Q2,Qc,Q8));  (Q8=Q2,L8=L6) ), gen(adjekt(Ro,Zi,Pa,Ci,St),sem(_,Se),Ne,Ko1,([X],[]),_),dappend(Q8,([X],[]),Q10), ((((pick(L8,rel,N8,L10),surnof(_,_,far(non,_,_),N8,rel,LL,Qd));    (config(_,_,_,_,_,ine(_,_,a,_,_),_,_),     kompar(Ko1,Ko2),gen(subst(_,_,nom,sg),_,ano,Ko2,Qd,_))   ),dappend(Q10,([ako],['Kom']),Q11),dappend(Q11,Qd,Q12),Sid=right  );  (Q12=Q10,L10=L8) ),ifthen(var(Sid),Sid=left), L10=[]. suradv(St,sem(Se,Od,See),N,SP,LL,Q12) :- member([N,Ko|L],LL),pair(SP,SP1),empty((SP1,_),L,L2), Q0=([],[]), (pick(L2,neg,nie,L4);  (Ne=ano,L4=L2) ), (pick(L4,gra,St,L6);  (St=poz,L6=L4) ), ((Se\==mes,pick(L6,mes,N6,L8),   suradv(_,sem(mes,_,_),N6,mes,LL,Qc),dappend(Q0,Qc,Q8));  (Q8=Q0,L8=L6) ), gen(adverb(St),sem(SP),Ne,Ko,([X],_),_),dappend(Q8,([X],[]),Q10), ((Se==mds,pick(L8,rel,N8,L10),   surnof(_,_,far(non,_,_),N8,rel,LL,Qd),dappend(Q10,([ako|Qd],[]),Q12));  (Q12=Q10,L10=L8) ), L10=[].surinf(N,SP,LL,Q10) :- config(_,_,syn(_,a,_,_,_,_,_),_,_,_,_,_), member([N,Ko|L],LL),pair(SP,SP1),empty((SP1,_),L,L2), (pick(L2,neg,nie,L4);  (Ne=ano,L4=L2) ), gen(infin,sem(In,Rx,Vd),Ne,Ko,Q0,_), ((pick(L4,SP4,N4,L6),   ((INF=1,int(In,inf,__,SP4,_),     surinf(N4,SP4,LL,Qb),dappend(Q0,Qb,Q6));    (AKT=1,     memb1([N4,Km4|_],LL),radix(Km4,_,sub,cat(Se4,_,_,_,_)),     int(In,Pr4,Pa4,Se5,SP4,_),sema(Se4,se5),     surnof(gr(_,_,Pa4,_),sem(Se4,_,_),far(non,_,_),N4,SP4,LL,Qb),     dappend(Q0,Qb,Q6))   )   );  (L6=L4,Q6=Q0) ), ((INF=0,AKT==1,pick(L6,SP6,N6,L8),   memb1([N6,Km6|_],LL),radix(Km6,_,sub,cat(Se6,_,_,_,_)),   int(In,Pr6,Pa6,Se7,SP6,_),sema(Se6,Se7),   surnof(gr(_,_,Pa6,_),sem(Se6,_,_),far(non,_,_),N6,SP6,LL,Qd),   dappend(Q6,Qd,Q8));  (L8=L6,Q8=Q6) ), L8=[],dappend(Q8,([],['Inf']),Q10).surtranz(N,SP,LL,Q10) :-   config(_,_,syn(a,_,_,_,_,_,_),_,_,_,_,_),   memb1([N,Ko|L],LL),pair(SP,XSP),empty((XSP,_),L,L2),   (pick(L2,neg,nie,L3);    (Ne=ano,L3=L2)   ),   (pick(L3,cas,_,L4);L4=L3),   (pick(L4,asp,_,L5);L5=L4),   (pick(L5,dir,_,L6);L6=L5),   gen(tranz,sem(In,Rx,Vd),Ne,Ko,Q0,_),   ((pick(L6,SP6,N6,L8),     memb1([N6,Km6|_],LL),radix(Km6,_,sub,cat(Se6,_,_,_,_)),     int(In,Pr6,Pa6,Se7,SP6,_),sema(Se6,Se7),     surnof(gr(_,_,Pa6,_),sem(Se6,_,_),far(non,_,_),N6,SP6,LL,Qd),     dappend(Q0,Qd,Q8));    (L8=L6,Q8=Q0)   ),   L8=[],dappend(Q8,([],['Tra']),Q10).sursubsen(N,SP,gr(Ro,Zi,Pa,Ci),far(M),LL,Q2) :-   config(_,_,syn(_,_,_,_,_,a,_),_,_,_,_,_),   memb1([N,Km|L],LL),pair(SP,XSP1),standard(XSP1,XSP),   (radix(Km,_,sl,cat(In,_,_,Rx,Vd,_,_));radix(Km,_,_,cat(Se,_,_,_,_));    radix(Km,_,adj,cat(_,Se,_,_,_,_))),   ((nonvar(In),int(In,Pr,Pa,Se,XSP,_),			    sursub(Pr,'ktor˝',gr(Ro,Zi,Pa,Ci),far(M),In,Q,N,SP,LL));    (int(In,'ûe',_,_,XSP,_),sursub(_,'ûe',_,far,_,Q,N,SP,LL));    (int(In,Pr,Pa,Se,XSP,_),sursub(_,'kto',gr(_,_,Pa,_),far,Se,Q,N,SP,LL));			    sursub(Pr,kam,_,SP,far,Q,N,XSP,LL)   ),dappend(Q,([],['Sub']),Q2).sursub(Pr,'ktor˝',gr(Ro,Zi,Pa,Ci),far(M),In,Q,N,SP,LL) :-   ifthenelse(Pr=0,Q0=([','],[]),Q2=([',',Pr],[])),   gen(adjpron(_,Ci,Ro,Zi,Pa),sem(opyt,urc,Vzd,ned,_),ano,'k˝',([X],_),_),   dappend(Q0,([X],[]),Q2),   sursen(bezhl,reg,akt,gr(Ro,Zi,Ci),far(M),N,SP,LL,Qa),      dappend(Q2,Qa,Q4),dappend(Q4,([','],[]),Q).sursub(_,'ûe',_,_,_,Q,N,SP,LL) :-   Q0=([',',Con],[]),(Con='ûe';Con='Ëi';Con=aby),   sursen('ûe',reg,akt,_,_,N,SP,LL,Qa),   dappend(Q0,Qa,Q2),dappend(Q2,([','],[]),Q).sursub(_,'kto',gr(_,_,Pa,_),_,Se,Q,N,SP,LL) :-   ifthenelse(Pr=0,Q0=([','],[]),Q0=([',',Pr],[])),   gen(subpron(_,_,_,Zi,Pa),sem(opyt,urc,Vzd,ned,subj),ano,Ko,([X],_),_),   sursen(bezhl,reg,akt,_,_,N,SP,LL,Qa),   dappend(Q0,([X],[]),Q2),dappend(Q2,Qa,Q4),dappend(Q4,([','],[]),Q).sursub(Pr,kam,_,_,XSP,Q,N,SP,LL) :-   gen(cirpron,sem(opyt,urc,ned,SP),ano,Ko,([X],_),_),   sursen(bezhl,sub,akt,_,_,N,XSP,LL,Qa),   dappend(([',',X],[]),Qa,Q2),dappend(Q2,([','],[]),Q).reflex(I) :- I<36,I>30.standard((SP,N),(SP,N)) :- nonvar(N),!.standard((lok,_),(lok,1)).surnof(GC,SC,FAR,N,SP,LL,Q) :-    ifthenelse(recorded(nfchart,srnf(GC,SC,FAR,N,SP,LL,Q),_),fail,    (surnof2(GC,SC,FAR,N,SP,LL,Q),FAR=far(_,Kpl,Tra),     recordz(nfchart,srnf(GC,SC,far(_,Kpl,Tra),N,SP,LL,Q),_),     fail)).surnof(GC,SC,FAR,N,SP,LL,Q) :- !,recorded(nfchart,srnf(GC,SC,FAR,N,SP,LL,Q),_).gen(GC,SC,Ne,Ko,(X,[]),S) :-   ifthenelse(recorded(gnchart,gn(GC,SC,Ne,Ko,X,S),_),    fail,    (code_world(C,main),data_world(D,lexicon),     gent(GC,SC,Ne,Ko,X,S),     data_world(_,D),code_world(_,C),     recordz(gnchart,gn(GC,SC,Ne,Ko,X,S),_),     fail)).gen(GC,SC,Ne,Ko,(X,[]),S) :- !,recorded(gnchart,gn(GC,SC,Ne,Ko,X,S),_).casepas(akt,Pa,Pa) :- !.casepas(pas,nom,ins) :- !.casepas(pas,ak,nom) :- !.casepas(pas,Pa,Pa) :- !.vokaliz(0,_,[]) :- !.vokaliz(P1,T,P3) :-   code_world(W,main),spell(P1,P2),reverse(P2,[A|_]),spell(T,[B,C|_]),   (an(pronom(1,sg,_,osob,_),_,_,ja,[T|_],_);    A=B;    parson(A,B);    parson(B,A);    (fail,konson(B),konson(C))   ),   prep1(_,yes,P1,P3,[]),code_world(_,W),!.vokaliz(P1,_,P2) :-    code_world(_,main),   (prep1(_,no,P1,P2,[]);prep2(_,_,P1,P2,[])),   code_world(_,syntax),!.pick([X,Y|L1],SP,N,[X,Y|L2]) :- pick(L1,SP,N,L2).pick([SP,N|L],SP,N,L) :- !.print(Q) :- print(1,Q).lprint(Q) :- open(H,prn,w),print(H,Q),close(H).fprint(Q) :- open(H,'diana.txt',a),print(H,Q),close(H).print(H,([X|L],Ret)) :- code_world(W,main),uplow(Y,X),code_world(_,W),   tab(H,2),write(H,Y),prnt(H,L,N1),write(H,'.'),   ifthenelse(H==1,(tget(R,C),tmove(R,60)),                   (string_length(X,N2),N3 is 50-N1-N2,tab(H,N3))),   write(H,'^'),prnt3(H,Ret),nl(H).prnt(H,[],0) :- !.prnt(H,[','],0) :- !.prnt(H,[','|L],N2) :- write(H,','),prnt(H,L,N1),N2 is N1+1,!.prnt(H,[X|L],N3) :- write(H,' '),write(H,X),prnt(H,L,N1),string_length(X,N2),   N3 is N1+N2+1.prnt3(_,[]) :- !.prnt3(H,[X|L]) :- write(H,X),prnt3(H,L).