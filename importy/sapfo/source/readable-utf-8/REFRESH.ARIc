fresh :- lexload,intload,synload,asserta((sapfo :- reconsult(constant),main)).lexload :- open(H,'lexicon.lex',r),create_world(lexicon),   data_world(W,lexicon),lexload(H),data_world(_,W),   close(H).lexload(H) :-  repeat,read(H,K),   ifthen(K\==eof,(    read(H,list(L1)),read(H,list(L2)),onetwo(L,L1,L2),    K=kmen(KM,KO,Sd,Cat),recordb(dic,KM,kmen(Sd,Cat,KO,L)),fail)),   repeat,read(H,P),   ifthen(P\==eof,(    P=pzkmen(Pk,KM,KO),recordb(pzkmene,Pk,pzkmen(KM,KO)),fail)).intload :- open(H,'intencia.lex',r),create_world(valency),   data_world(W,valency),intload(H),data_world(_,W),close(H).intload(H) :- repeat,read(H,LINE),   ifthen(LINE\==eof,(    LINE=int(Cr,Pr,Pa,Se,SP,Fl),    recordh(intencia,Cr,int1(Pr,Pa,Se,SP,Fl)),fail)),   repeat,read(H,Pcs),   ifthen(Pcs\==eof,(Pcs=pro(Cr,Proces),recordh(procesy,Cr,Proces),fail)).onetwo([],[],[]) :- !.onetwo([A,B|L],[A|L1],[B|L2]) :- onetwo(L,L1,L2),!.onetwo([A],[A],[]) :- !.synload :- create_world(inference),code_world(W,inference),    reconsult('synonlex.ari'),code_world(_,W).